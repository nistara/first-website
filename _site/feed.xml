<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nistara Randhawa</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>https://nistara.github.io/</link>
    <atom:link href="https://nistara.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 16 Mar 2016 09:35:15 -0700</pubDate>
    <lastBuildDate>Wed, 16 Mar 2016 09:35:15 -0700</lastBuildDate>
    <generator>Jekyll v3.0.3</generator>
    
      <item>
        <title>release notes version 0.2</title>
        <description>&lt;p&gt;After a while of leaving the project at rest, I finally push some features that I already developed a while ago, into version 0.2 of the jekyll-lablog template.&lt;/p&gt;

&lt;p&gt;It’s major advancements are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;new &lt;strong&gt;typeset using Open Sans and minimalist icons&lt;/strong&gt; (compiled using &lt;a href=&quot;https://icomoon.io/&quot;&gt;IcoMoon&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;a dark, &lt;strong&gt;responsive menu&lt;/strong&gt;. It smartly provides direct links to all pages or posts that have a &lt;code class=&quot;highlighter-rouge&quot;&gt;menu:&lt;/code&gt; variable specified in their yml header.&lt;/li&gt;
  &lt;li&gt;revised &lt;strong&gt;footer&lt;/strong&gt;, including links and icons and an RSS/Atom feed&lt;/li&gt;
  &lt;li&gt;manage your &lt;strong&gt;projects&lt;/strong&gt; using a layout file that collects all content that has a specific &lt;strong&gt;tag&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;automatically &lt;strong&gt;collapse completed tasks&lt;/strong&gt; (toggle switch will follow)&lt;/li&gt;
  &lt;li&gt;enable &lt;strong&gt;multiple tasklists&lt;/strong&gt;, that are compiled into a long one&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 22 Mar 2015 00:00:00 -0700</pubDate>
        <link>https://nistara.github.io/2015/03/22/release-notes-version-02.html</link>
        <guid isPermaLink="true">https://nistara.github.io/2015/03/22/release-notes-version-02.html</guid>
        
        <category>release</category>
        
        
      </item>
    
      <item>
        <title>using projects</title>
        <description>&lt;p&gt;A lablog is most powerful if you can arrange or subgroup your notes into ‘projects’. A project deserves it’s own overview page, that collects all the notes, tasks and important references.&lt;/p&gt;

&lt;p&gt;The jekyll-lablog template now allows keeping projects in subdirectories within the directory ‘_projects’. Each project can contain individual pages, tasklists and posts.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;_projects
|- project1
|   |- _posts
|   |   |- 2014-11-04-using-projects.md
|   |- project01.md
|   |- todo.md
|- todo.md


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, for now, it is not the directory structure that assignes containt to be part of a project. I found it most convenient to link content to a project using &lt;strong&gt;tags&lt;/strong&gt;. That is, a project basically is initiated by a project file, e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;project01.md&lt;/code&gt;, which has a yml header like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: project
title: &quot;Create your projects in jekyll-lablog&quot;
category: project01
menu: &quot;a first project&quot;
github:
website:
contact:

---

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;menu:&lt;/code&gt; variable will make jekyll-lablog to add a link to the menu for that project.&lt;br /&gt;
The variables &lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;website&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;contact&lt;/code&gt; will autogenerate links to your projects github repository and issues, to it’s website and your contact mailadress.&lt;/p&gt;

&lt;p&gt;The layout file &lt;code class=&quot;highlighter-rouge&quot;&gt;project.html&lt;/code&gt; is used for this page which collects all content that has the same tag as specified in the ‘category’ variable. Thus, all posts, pages or tasklists, that belong to the project need to specify that tag in their header, e.g.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: &quot;using projects&quot;
date: &quot;2014-11-04&quot;
tags:
 - project01
---

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I  intend to automatize the assignment of content to projects using the directory structure mentioned above, therefore I recommend sticking to that, even if it is not necessary at present.&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Nov 2014 00:00:00 -0800</pubDate>
        <link>https://nistara.github.io/_projects/project1/2014/11/04/using-projects.html</link>
        <guid isPermaLink="true">https://nistara.github.io/_projects/project1/2014/11/04/using-projects.html</guid>
        
        <category>project01</category>
        
        
        <category>_projects</category>
        
        <category>project1</category>
        
      </item>
    
      <item>
        <title>using tags</title>
        <description>&lt;p&gt;Using tags on your posts is straightforward: Just put them in your new post’s yml front-matter:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: &quot;using tags&quot;
date: &quot;2014-11-04&quot;
tags:
 - log
 - howto

---

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;They will be displayed automatically on the page, in the index of posts and on the archive. Of course they will also show up on the ‘tags’ page.&lt;/p&gt;

&lt;p&gt;It is a feature of liquid, which is used to render these pages, that capitalized tags will be sorted before small-case tags (&lt;em&gt;i.e.&lt;/em&gt; A, B, C, a, b, c). This can be utilized by giving certain tags priority just by using upper case names.&lt;/p&gt;

&lt;p&gt;The section ‘related posts’, which now automatically shows up at the bottom of each post, provides links to posts that share the same set of tags. (This is buggy, though)&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Nov 2014 00:00:00 -0800</pubDate>
        <link>https://nistara.github.io/2014/11/04/using-tags.html</link>
        <guid isPermaLink="true">https://nistara.github.io/2014/11/04/using-tags.html</guid>
        
        <category>log</category>
        
        <category>howto</category>
        
        
      </item>
    
      <item>
        <title>Markdown and more</title>
        <description>&lt;p&gt;The lablog basically is best written in Markdown, although other markup is also parsed by Jekyll (e.g. textile or pure html).&lt;/p&gt;

&lt;p&gt;The parser that it uses by default is kramdown with github flavouring, which means that it deviates from the markdown syntax in terms of linebreaks. Linebreaks are usually taken literally, unlike classic Markdown, where you always have to add two spaces or make a double linebreak to achieve an actual linebreak.&lt;/p&gt;

&lt;p&gt;Also, you can use fenced codeblocks and footnotes&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; using the syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; and footnotes[^1] using

[^1]: This is a footnote

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;This is a footnote &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 30 Oct 2014 00:00:00 -0700</pubDate>
        <link>https://nistara.github.io/2014/10/30/markdown-and-more.html</link>
        <guid isPermaLink="true">https://nistara.github.io/2014/10/30/markdown-and-more.html</guid>
        
        <category>log</category>
        
        <category>howto</category>
        
        
      </item>
    
      <item>
        <title>Configure your menu</title>
        <description>&lt;p&gt;The smart menu compiles all the information you want to have at hand. It links to the archive and tags page, to the global tasklist, and to any project pages you might have included in your repository (any page that calls &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: project&lt;/code&gt; in the yml front matter).&lt;/p&gt;

&lt;p&gt;But you are very flexible in extending it. You can add the parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;menu: true&lt;/code&gt; in the front matter of literally &lt;em&gt;any&lt;/em&gt; page or post, which will automatically generate a link to that page.&lt;/p&gt;

&lt;p&gt;You can include the entire content of a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;MENU.md&lt;/code&gt; (must have a yml front matter), or of any file that calls &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: menu&lt;/code&gt; in it’s front matter. But you should use this only on files with little content.&lt;/p&gt;

&lt;p&gt;The order in which the menu is built is as follows&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Home page&lt;/li&gt;
  &lt;li&gt;global tasklist &lt;code class=&quot;highlighter-rouge&quot;&gt;tasks.md&lt;/code&gt;  or &lt;code class=&quot;highlighter-rouge&quot;&gt;tasks.html&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;tags &lt;code class=&quot;highlighter-rouge&quot;&gt;tags.md&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;tags.html&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;archive &lt;code class=&quot;highlighter-rouge&quot;&gt;archive.md&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;archive.html&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;project pages &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: project&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;pages with &lt;code class=&quot;highlighter-rouge&quot;&gt;menu: true&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;posts with &lt;code class=&quot;highlighter-rouge&quot;&gt;menu: true&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;content of &lt;code class=&quot;highlighter-rouge&quot;&gt;MENU.md&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;content of all files with &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: menu&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 26 Oct 2014 00:00:00 -0700</pubDate>
        <link>https://nistara.github.io/2014/10/26/configure-your-menu.html</link>
        <guid isPermaLink="true">https://nistara.github.io/2014/10/26/configure-your-menu.html</guid>
        
        <category>log</category>
        
        <category>howto</category>
        
        
      </item>
    
      <item>
        <title>Snapshots with greenshot</title>
        <description>&lt;p&gt;It is quite important to have an easy way to save and embed information from websites, documents, powerpoint slides or pdfs quickly into the lablog.&lt;/p&gt;

&lt;p&gt;Fortunately, there is an excellent open source software for direct screenshots: &lt;a href=&quot;http://getgreenshot.org/de/&quot;&gt;greenshot&lt;/a&gt;.&lt;br /&gt;
Pushing the &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; button calls the selection tool which allows you to mark a rectangular region. You can chose a preset, where and under which format to save the file.&lt;br /&gt;
I recommend to store everything in a sub-directory called ‘_assets’, maybe using date based sub-folders.&lt;/p&gt;

&lt;h2 id=&quot;embedding-the-snapshot&quot;&gt;Embedding the snapshot&lt;/h2&gt;

&lt;p&gt;This is a bit verbose yet, since Jekyll has trouble with relative links. You can use Markdown image syntax &lt;code class=&quot;highlighter-rouge&quot;&gt;![alternative text / caption](path/to/image.png)&lt;/code&gt; but you will need to specify an absolute path, which can be achieved by prepending the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;site.baseurl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;]({{ site.baseurl }}/_assets/snapshot_fig1.png)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ocr-text-recognition&quot;&gt;OCR text recognition&lt;/h2&gt;

&lt;p&gt;Greenshot also supports text recognition using &lt;a href=&quot;https://support2.microsoft.com/kb/982760&quot;&gt;Microsoft Office Document Imaging (MODI)&lt;/a&gt;, which can be installed as part of Office 2007. Alternatively, it can be installed in a package with the free &lt;a href=&quot;http://www.microsoft.com/en-US/download/details.aspx?id=21581&quot;&gt;SharePoint Designer 2007&lt;/a&gt; which unfortunately is quite a big tool to download, but the installation wizard lets you customize to install MODI only (de-activate all high-level programs, then select only Microsoft Office Document Imaging inside ‘Office Tools’ for installation).&lt;/p&gt;

&lt;p&gt;So after installing that, if you select an area and click on the option OCR, it will copy any content as raw text to the clipboard and lets you paste it wherever you like. However, text recognition is not perfect, depending on the font and quality of the snapshot.&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Oct 2014 00:00:00 -0700</pubDate>
        <link>https://nistara.github.io/2014/10/15/snapshots-with-greenshot.html</link>
        <guid isPermaLink="true">https://nistara.github.io/2014/10/15/snapshots-with-greenshot.html</guid>
        
        <category>log</category>
        
        <category>howto</category>
        
        
      </item>
    
      <item>
        <title>Syntax highlighting</title>
        <description>&lt;p&gt;Of course the lablog is supporting syntax highlighting. Since it runs without further installation on all platforms I decided to embed &lt;a href=&quot;https://highlightjs.org/&quot;&gt;highlight.js&lt;/a&gt;. The script auto-detects the type of code, which means you just need to use Markdown code syntax, which is either inline using single backticks ( ` , e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;plot(cars, xlim=0x20)&lt;/code&gt;) an indention of the paragraph by four spaces or a double tab. Like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;For example this piece of Matlab code:

    n = 20; % number of points
    points = [random(&#39;unid&#39;, 100, n, 1), random(&#39;unid&#39;, 100, n, 1)];
    len = zeros(1, n - 1);
    points = sortrows(points);
    %% Initial set of points
    plot(points(:,1),points(:,2));

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Alternatively, you can use fenced code blocks, which allows you to specify the language manually (not required, usualy the name of the language in small letters).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Or some R code

```r
library(ggplot2)

centre &amp;lt;- function(x, type, ...) {
  switch(type,
         mean = mean(x),
         median = median(x),
         trimmed = mean(x, trim = .1))
}
 ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;supported-languages&quot;&gt;Supported languages&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;for Science: R, Matlab, Mathematica,  C#, C++, Python&lt;/li&gt;
  &lt;li&gt;for writing: Markdown, Tex&lt;/li&gt;
  &lt;li&gt;generally useful:  Bash, Makefile&lt;/li&gt;
  &lt;li&gt;etc: Nginx, Apache, CSS, CoffeeScript, SCSS, Diff, HTML, XML, HTTP, Ini, JSON, Java, JavaScript, Objective CvPHP, Perl,Ruby, SQL (&lt;a href=&quot;https://highlightjs.org/download/&quot;&gt;more can be installed&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;h3 id=&quot;matlab&quot;&gt;Matlab&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;n = 20; % number of points
points = [random(&#39;unid&#39;, 100, n, 1), random(&#39;unid&#39;, 100, n, 1)];
len = zeros(1, n - 1);
points = sortrows(points);
%% Initial set of points
plot(points(:,1),points(:,2));
for i = 1: n-1
    len(i) = points(i + 1, 1) - points(i, 1);
end
while(max(len) &amp;gt; 2 * min(len))
    [d, i] = max(len);
    k = on_margin(points, i, d, -1);
    m = on_margin(points, i + 1, d, 1);
    xm = 0; ym = 0;
%% New point
    if(i == 1 || i + 1 == n)
        xm = mean(points([i,i+1],1))
        ym = mean(points([i,i+1],2))
    else
        [xm, ym] = dlg1(points([k, i, i + 1, m], 1), ...
            points([k, i, i + 1, m], 2))
    end

    points = [ points(1:i, :); [xm, ym]; points(i + 1:end, :)];
end

function [net] = get_fit_network(inputs, targets)
    % Create Network
    numHiddenNeurons = 20;  % Adjust as desired
    net = newfit(inputs,targets,numHiddenNeurons);
    net.trainParam.goal = 0.01;
    net.trainParam.epochs = 1000;
    % Train and Apply Network
    [net,tr] = train(net,inputs,targets);
end

foo_matrix = [1, 2, 3; 4, 5, 6]&#39;&#39;&#39;;
foo_cell = {1, 2, 3; 4, 5, 6}&#39;&#39;.&#39;.&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;r&quot;&gt;R&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ggplot2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;centre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;median&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;median&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;trimmed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;myVar1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;myVar.2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# test &quot;test&quot;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test # test&quot;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1e-7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.2e+7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3e+10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xabcdef1234567890&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;123L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x10L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10000000L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1e6L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.1L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1e-3L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4123.381E-10i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.E10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# BUG: .E10 should be part of number
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Numbers in some different contexts
&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1L&lt;/span&gt;
&lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;.234&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xlim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xlim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-30&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my.data.3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# not a number
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;this is a quote that spans
multiple lines
\&quot;

is this still a quote? it should be.
# even still!

&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# now we&#39;re done.
&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&#39;same for
single quotes #&#39;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# keywords
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NA_integer_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NA_real_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NA_character_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NA_complex_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.2&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# not keywords
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quick&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brown&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fox&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jumped&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dogs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;na&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inf&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nan&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;na_integer_&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;na_real_&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;na_character_&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;na_complex_&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;While&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Repeat&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;For&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Next&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Break&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;NULL&quot;&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`NULL`&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;NULL&#39;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# operators
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# infix operator
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;union&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;sb&quot;&gt;`&quot;test&quot;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 14 Oct 2014 00:00:00 -0700</pubDate>
        <link>https://nistara.github.io/2014/10/14/syntax-highlighting.html</link>
        <guid isPermaLink="true">https://nistara.github.io/2014/10/14/syntax-highlighting.html</guid>
        
        <category>log</category>
        
        
      </item>
    
      <item>
        <title>Put your labnotebook online</title>
        <description>&lt;p&gt;In my opinion the perfect solution for a quick and semi-private deployment: Dropbox can host a static site placed in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/Public&lt;/code&gt; folder. Just keep the log directory anywhere on your PC, but preferably somewhere in a private section of your Dropbox, edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; and specify&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;destination: ../../Public/mylabnotebook
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;i.e. the relative path from your blog directory to the target directory. Then build your blog.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll build
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, wait for the sync to happen and go to your Dropbox account online, navigate to your public directory, and there to the newly created directory &lt;code class=&quot;highlighter-rouge&quot;&gt;mylabnotebook&lt;/code&gt;. Right-click on the &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file to get the public link. The root of this link (without &lt;code class=&quot;highlighter-rouge&quot;&gt;/index.html&lt;/code&gt;) will be required for the next step:&lt;/p&gt;

&lt;p&gt;Go to your  &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file and set&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;url: &quot;https://dl.dropboxusercontent.com&quot;
baseurl: &quot;u/xxxxxx/lablog&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now build again and navigate in your browser to &lt;code class=&quot;highlighter-rouge&quot;&gt;https://dl.dropboxusercontent.com/u/xxxxxx/mylabnotebook/index.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Save this long, cryptic link as a bookmark or to load at browser start-up. For the future, all you need is to re-run the simple &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt; command each time you updated a file (which also can be done by a simple bash script or a background process that listens to changes; you’ll figure that out later)!&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Oct 2014 00:00:00 -0700</pubDate>
        <link>https://nistara.github.io/2014/10/10/put-your-labnotebook-online.html</link>
        <guid isPermaLink="true">https://nistara.github.io/2014/10/10/put-your-labnotebook-online.html</guid>
        
        <category>log</category>
        
        <category>howto</category>
        
        
      </item>
    
      <item>
        <title>Set up your own lab notebook</title>
        <description>&lt;p&gt;Getting started with your own lab notebook is very easy.&lt;/p&gt;

&lt;p&gt;The requirements are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;a convenient text editor (e.g. Geany, Notepad, Notepad++, Atom)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, what helps is some basic knowledge of &lt;a href=&quot;http://git-scm.com/&quot;&gt;git&lt;/a&gt; and having a Dropbox or GitHub account, or access to a webserver for the deployment on the internet.&lt;/p&gt;

&lt;h2 id=&quot;set-up-locally&quot;&gt;Set-up locally&lt;/h2&gt;

&lt;p&gt;You can download the &lt;a href=&quot;https://github.com/fdschneider/jekyll-lablog/archive/dev.zip&quot;&gt;zip-file&lt;/a&gt; or clone the &lt;a href=&quot;https://github.com/fdschneider/jekyll-lablog&quot;&gt;repository from GitHub&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:fdschneider/jekyll-lablog.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and use &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; to run it locally. It will be available in your browser under the URL &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:4000&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;personalize&quot;&gt;Personalize&lt;/h2&gt;

&lt;p&gt;You should open the file &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; and enter some personal variables, such as a site title and description, your name and contact details.&lt;/p&gt;

&lt;h2 id=&quot;put-it-online&quot;&gt;Put it online&lt;/h2&gt;

&lt;p&gt;If you want to access the log from anywhere on the internet you might want one of the solutions described in the  &lt;a href=&quot;https://github.com/fdschneider/jekyll-lablog#deployment&quot;&gt;README&lt;/a&gt;. For instance, you can &lt;a href=&quot;/2014/10/10/put-your-labnotebook-online.html&quot;&gt;use your Dropbox account&lt;/a&gt; to make it available online. You just need to specify the &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt;, as well as the target directory for generation &lt;code class=&quot;highlighter-rouge&quot;&gt;destination&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Oct 2014 00:00:00 -0700</pubDate>
        <link>https://nistara.github.io/2014/10/08/set-up-your-own-lab-notebook.html</link>
        <guid isPermaLink="true">https://nistara.github.io/2014/10/08/set-up-your-own-lab-notebook.html</guid>
        
        <category>log</category>
        
        <category>howto</category>
        
        
      </item>
    
      <item>
        <title>Full Math Support</title>
        <description>&lt;p&gt;For scientific writing Math is essential. That is why I added &lt;a href=&quot;http://www.mathjax.org/&quot;&gt;Mathjax&lt;/a&gt; to render all your beautiful equations inline, $ f(x) = a x^\alpha $, or as blocked equation element&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;J_\alpha(x) = \sum\limits_{m=0}^\infty \frac{(-1)^m}{m! \, \Gamma(m + \alpha + 1)}{\bigl({\frac{x}{2}}\bigr)}^{2 m + \alpha}&lt;/script&gt;

&lt;p&gt;Have fun!&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Oct 2014 00:00:00 -0700</pubDate>
        <link>https://nistara.github.io/2014/10/08/full-math-support.html</link>
        <guid isPermaLink="true">https://nistara.github.io/2014/10/08/full-math-support.html</guid>
        
        <category>math</category>
        
        
      </item>
    
  </channel>
</rss>
